# This is a reusable workflow

# This workflow builds the test image for testing purposes and pushes it to ghcr.io

name: Build and Push Test Image to GHCR

on:
  workflow_call:
    inputs:
      gateway-image:
        description: Name of the Gateway image (base) to use
        type: string
      enterprise:
        description: Whether or not to use enterprise Gateway images
        type: boolean
        default: false
    outputs:
      image:
        description: Name of the Gateway test image being built
        value: ${{ jobs.build-and-push-test-image.outputs.image }}

jobs:
  build-and-push-test-image:
    name: Build and push test image
    runs-on: ${{ vars.RUNS_ON }}
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.build-and-push.outputs.image }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Download assets
        timeout-minutes: 5
        uses: actions/download-artifact@v4
        with:
          name: assets

      - name: Unpack assets
        run: tar xzvf ./assets.tar.gz

      - name: Select Gateway image
        id: select-gateway-image
        uses: ./.github/actions/select-gateway-image
        with:
          current-image: ${{ inputs.gateway-image }}
          enterprise: ${{ format('{0}', inputs.enterprise) }} # ensure it is a string

      - name: Log in to Docker Hub
        if: ${{ format('{0}', inputs.enterprise) == 'true' }}
        timeout-minutes: 1
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKER_PULL_USER }}
          password: ${{ secrets.DOCKER_PULL_PASSWORD }}

      - name: Log in to GitHub Container Registry
        timeout-minutes: 1
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull and inspect base image
        timeout-minutes: 5
        run: |
          docker pull ${{ steps.select-gateway-image.outputs.image }}
          docker inspect ${{ steps.select-gateway-image.outputs.image }}

      - name: Build and push image
        id: build-and-push
        env:
          GATEWAY_IMAGE: ${{ steps.select-gateway-image.outputs.image }}
          GATEWAY_TEST_IMAGE: |-
            ghcr.io/kong/${{ format('{0}', inputs.enterprise) == 'true' && 'kong-admin-kong-ee' || 'kong-manager' }}:${{ github.sha }}

        run: |
          export KONG_MANAGER_BUILD_SHA1=$(cat dist/build.sha1)
          docker compose -f .ci/docker-compose.yml build kong-test-image
          docker compose -f .ci/docker-compose.yml push kong-test-image
          echo "image=$GATEWAY_TEST_IMAGE" >> $GITHUB_OUTPUT
